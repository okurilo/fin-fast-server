{"version":3,"sources":["../../src/routes/budget.js"],"names":["router","Budget","models","sendJsonResponse","res","status","content","json","checkAuth","req","next","session","logged_user","send","get","apiController","budgetByUser","post","create","income","body","startDay","Date","days","percentStorage","costs","JSON","parse","total","storage","balance","budget","user","userId","err","put"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AACA,IAAMC,MAAM,GAAG,IAAIC,mBAAOD,MAAX,EAAf;;AAEA,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,GAAD,EAAMC,MAAN,EAAcC,OAAd,EAA0B;AAC/CF,EAAAA,GAAG,CAACC,MAAJ,CAAYA,MAAZ;AACAD,EAAAA,GAAG,CAACG,IAAJ,CAAUD,OAAV;AACH,CAHD;;AAIA,SAASE,SAAT,CAAmBC,GAAnB,EAAwBL,GAAxB,EAA6BM,IAA7B,EAAmC;AAC/B,MAAI,CAACD,GAAG,CAACE,OAAJ,CAAYC,WAAjB,EAA8B;AAC5BR,IAAAA,GAAG,CAACS,IAAJ,CAAS,0CAAT;AACD,GAFD,MAEO;AACLH,IAAAA,IAAI;AACL;AACF;AACH;;;AACAV,MAAM,CAACc,GAAP,CAAW,GAAX,EAAgBN,SAAhB,EAA2BO,0BAAcC,YAAzC;AACAhB,MAAM,CAACiB,IAAP,CAAY,GAAZ,EAAiBT,SAAjB,EAA4B,UAASC,GAAT,EAAcL,GAAd,EAAmB;AAC3CF,qBAAOD,MAAP,CAAciB,MAAd,CAAqB;AACjBC,IAAAA,MAAM,EAAEV,GAAG,CAACW,IAAJ,CAASD,MADA;AAEjB;AACAE,IAAAA,QAAQ,EAAE,IAAIC,IAAJ,EAHO;AAIjBC,IAAAA,IAAI,EAAEd,GAAG,CAACW,IAAJ,CAASG,IAJE;AAKjBC,IAAAA,cAAc,EAAEf,GAAG,CAACW,IAAJ,CAASI,cALR;AAMjBC,IAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWlB,GAAG,CAACW,IAAJ,CAASK,KAApB,CANU;AAOjBG,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEpB,GAAG,CAACW,IAAJ,CAASS,OADf;AAEHC,MAAAA,OAAO,EAAErB,GAAG,CAACW,IAAJ,CAASU,OAFf;AAGHC,MAAAA,MAAM,EAAEtB,GAAG,CAACW,IAAJ,CAASW;AAHd,KAPU;AAYjBC,IAAAA,IAAI,EAAEvB,GAAG,CAACE,OAAJ,CAAYsB;AAZD,GAArB,EAaG,UAAUC,GAAV,EAAeH,MAAf,EAAuB;AACtB,QAAIG,GAAJ,EAAS;AACL/B,MAAAA,gBAAgB,CAACC,GAAD,EAAM,GAAN,EAAW8B,GAAX,CAAhB;AACH;;AAAC;AACE/B,MAAAA,gBAAgB,CAACC,GAAD,EAAM,GAAN,EAAW2B,MAAX,CAAhB;AACH;AACJ,GAnBD;AAoBH,CArBD;AAsBA/B,MAAM,CAACmC,GAAP,CAAW,GAAX,EAAgB,UAAS1B,GAAT,EAAcL,GAAd,EAAmB;AAC/BA,EAAAA,GAAG,CAACS,IAAJ,CAAS,yBAAT;AACH,CAFD;AAGAb,MAAM,UAAN,CAAc,GAAd,EAAmB,UAASS,GAAT,EAAcL,GAAd,EAAmB;AAClCA,EAAAA,GAAG,CAACS,IAAJ,CAAS,yBAAT;AACH,CAFD;eAIeb,M","sourcesContent":["import { Router } from 'express';\r\nimport mongoose from 'mongoose';\r\nimport models from '../models';\r\nimport apiController from '../controllers/apiController';\r\n\r\nconst router = Router();\r\nconst Budget = new models.Budget();\r\n\r\nconst sendJsonResponse = (res, status, content) => {\r\n    res.status( status );\r\n    res.json( content )\r\n}\r\nfunction checkAuth(req, res, next) {\r\n    if (!req.session.logged_user) {\r\n      res.send('You are not authorized to view this page');\r\n    } else {\r\n      next();\r\n    }\r\n  }\r\n/* GET home page. */\r\nrouter.get('/', checkAuth, apiController.budgetByUser);\r\nrouter.post('/', checkAuth, function(req, res) {\r\n    models.Budget.create({\r\n        income: req.body.income,\r\n        // startDay: req.body.startDay,\r\n        startDay: new Date(),\r\n        days: req.body.days,\r\n        percentStorage: req.body.percentStorage,\r\n        costs: JSON.parse(req.body.costs),\r\n        total: {\r\n            storage: req.body.storage,\r\n            balance: req.body.balance,\r\n            budget: req.body.budget\r\n        },\r\n        user: req.session.userId\r\n    }, function (err, budget) {\r\n        if (err) {\r\n            sendJsonResponse(res, 400, err);\r\n        } {\r\n            sendJsonResponse(res, 200, budget);\r\n        }\r\n    });\r\n});\r\nrouter.put('/', function(req, res) {\r\n    res.send('respond with a resource');\r\n});\r\nrouter.delete('/', function(req, res) {\r\n    res.send('respond with a resource');\r\n});\r\n\r\nexport default router;"],"file":"budget.js"}