{"version":3,"sources":["../../src/routes/user.js"],"names":["router","post","req","res","body","userId","password","models","User","find","exec","err","user","sendJsonResponse","send","username","session","logged_user","save","console","log","id","get","Users","create"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAG,sBAAf,C,CACA;AAEA;;AAEAA,MAAM,CAACC,IAAP,CAAY,QAAZ,EAAsB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACtC,MAAIF,IAAI,GAAGC,GAAG,CAACE,IAAf;AACA,MAAIC,MAAM,GAAGJ,IAAI,CAACI,MAAlB;AAAA,MACIC,QAAQ,GAAGL,IAAI,CAACK,QADpB;;AAEEC,qBAAOC,IAAP,CACGC,IADH,CACQ;AAAC,gBAAYJ;AAAb,GADR,EAEGK,IAFH,CAEQ,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AACvB,QAAID,GAAJ,EAAS,OAAOE,gBAAgB,CAACV,GAAD,EAAM,GAAN,EAAWQ,GAAX,CAAvB;AACTC,IAAAA,IAAI,GAAGA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAd,GAAoBT,GAAG,CAACW,IAAJ,CAAS,OAAT,CAA3B;;AACA,QAAIT,MAAM,KAAKO,IAAI,CAACG,QAAhB,IAA4BT,QAAQ,KAAKM,IAAI,CAACN,QAAlD,EAA4D;AAC1DJ,MAAAA,GAAG,CAACc,OAAJ,CAAYC,WAAZ,GAA0B,IAA1B;AACAf,MAAAA,GAAG,CAACc,OAAJ,CAAYX,MAAZ,GAAqBA,MAArB;AACAH,MAAAA,GAAG,CAACc,OAAJ,CAAYE,IAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BlB,GAAG,CAACc,OAAJ,CAAYK,EAAvC,EAJ0D,CAK5D;;AACElB,MAAAA,GAAG,CAACW,IAAJ,CAAS,OAAT;AACD,KAPD,MAOO;AACLX,MAAAA,GAAG,CAACW,IAAJ,CAAS,eAAT;AACD;AACJ,GAfH;AAiBL,CArBD;AAsBAd,MAAM,CAACsB,GAAP,CAAW,SAAX,EAAsB,UAAUpB,GAAV,EAAeC,GAAf,EAAoB;AACxC,SAAOD,GAAG,CAACc,OAAJ,CAAYC,WAAnB;AACA,SAAOf,GAAG,CAACc,OAAJ,CAAYX,MAAnB,CAFwC,CAG1C;;AACIF,EAAAA,GAAG,CAACW,IAAJ,CAAS,YAAT;AACH,CALD;AAMAd,MAAM,CAACC,IAAP,CAAY,MAAZ,EAAoB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACpCoB,EAAAA,KAAK,CAACC,MAAN,CAAa;AACTT,IAAAA,QAAQ,EAAEb,GAAG,CAACE,IAAJ,CAASC,MADV;AAETC,IAAAA,QAAQ,EAAEJ,GAAG,CAACE,IAAJ,CAASE;AAFV,GAAb,EAGG,UAAUK,GAAV,EAAeC,IAAf,EAAqB;AACpB,QAAID,GAAJ,EAAS;AACLE,MAAAA,gBAAgB,CAACV,GAAD,EAAM,GAAN,EAAWQ,GAAX,CAAhB;AACH;;AAAC;AACEE,MAAAA,gBAAgB,CAACV,GAAD,EAAM,GAAN,EAAWS,IAAX,CAAhB;AACH;AACJ,GATD;AAUH,CAXD;eAaeZ,M","sourcesContent":["import { Router } from 'express';\r\nimport mongoose from 'mongoose';\r\nimport models from '../models';\r\n\r\nconst router = Router();\r\n// const Users = mongoose.model('Users');\r\n\r\n// var apiController = require('../controllers/api');\r\n\r\nrouter.post('/login', function (req, res) {\r\n    var post = req.body;\r\n    var userId = post.userId,\r\n        password = post.password;\r\n      models.User\r\n        .find({\"username\": userId})\r\n        .exec(function (err, user) {\r\n            if (err) return sendJsonResponse(res, 400, err);\r\n            user = user[0] ? user[0] : res.send('Empty');\r\n            if (userId === user.username && password === user.password) {\r\n              req.session.logged_user = true;\r\n              req.session.userId = userId;\r\n              req.session.save();\r\n              console.log(\"Session Id:\", req.session.id);\r\n            //   res.redirect('/my_secret_page');\r\n              res.send('Apply');\r\n            } else {\r\n              res.send('Bad user/pass');\r\n            }\r\n        })    \r\n    \r\n});\r\nrouter.get('/logout', function (req, res) {\r\n  delete req.session.logged_user;\r\n  delete req.session.userId;\r\n//   res.redirect('/login');\r\n    res.send('Logged out');\r\n});   \r\nrouter.post('/reg', function (req, res) {\r\n    Users.create({\r\n        username: req.body.userId,\r\n        password: req.body.password\r\n    }, function (err, user) {\r\n        if (err) {\r\n            sendJsonResponse(res, 400, err);\r\n        } {\r\n            sendJsonResponse(res, 200, user);\r\n        }\r\n    });\r\n});\r\n\r\nexport default router;"],"file":"user.js"}